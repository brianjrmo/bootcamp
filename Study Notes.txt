############################################################
# D O C K E R
############################################################
# switch data folder
wsl --shutdown
wsl --export docker-desktop-data docker-desktop-data.tar
wsl --unregister docker-desktop-data
wsl --import docker-desktop-data D:\bootcamp\docker-data\ docker-desktop-data.tar --version 2
erase docker-desktop-data.tar

# create ubuntu container
docker run -i -t ubuntu:latest /bin/bash
# create user bootcamp
adduser bootcamp
passwd bootcamp
adduser bootcamp sudo
su bootcamp
# install sudo
apt update
apt install sudo
# install python (https://linuxize.com/post/how-to-install-python-3-9-on-ubuntu-20-04/)
sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.8
echo 'alias python=python3' >> ~/.bashrc
source ~/.bashrc
# exit
sudo docker ps -l
sudo docker commit 7e20d89ce838 ubuntu:bootcamp
sudo docker images
sudo docker run -it ubuntu:bootcamp
# exit

# remove
sudo docker container ls -a
sudo docker container rm 6cc52bedabba 43f47fcb9b91
sudo docker image rm -f <image_id1> <image_id2> ... <image_idn>
#-----------------------------------------------------------
# build MySQL image from mysql/mysql-server
#-----------------------------------------------------------
#https://phoenixnap.com/kb/mysql-docker-container
sudo docker pull mysql/mysql-server:latest
sudo docker run --name=bootcamp_mysql --env="MYSQL_ROOT_PASSWORD=bootcamp" --restart on-failure -d mysql/mysql-server
sudo docker exec -i bootcamp_mysql mysql -uroot -pbootcamp <<< "CREATE USER 'bootcamp'@'%' IDENTIFIED BY 'bootcamp';"
sudo docker exec -i bootcamp_mysql mysql -uroot -pbootcamp <<< "GRANT ALL PRIVILEGES ON *.* TO 'bootcamp'@'%';"
sudo docker exec -i bootcamp_mysql mysql -ubootcamp -pbootcamp <<< "CREATE table mysql.usertable (id int, name varchar(50), status varchar(50), last_action datetime);"
sudo docker exec -i bootcamp_mysql mysql -ubootcamp -pbootcamp <<< "INSERT INTO mysql.usertable VALUE(1,'Carol', 'LOGIN', '2021-11-15 00:00:01');"
sudo docker exec -i bootcamp_mysql mysql -ubootcamp -pbootcamp <<< "INSERT INTO mysql.usertable VALUE(2,'Mani', 'LOGOFF', '2021-10-15 01:00:01');"
sudo docker exec -i bootcamp_mysql mysql -ubootcamp -pbootcamp <<< "INSERT INTO mysql.usertable VALUE(3,'Zoe', 'DELETED', '2002-04-15 12:00:01');"
#
# find out active container to commit
sudo docker ps
sudo docker commit <container-id> mysql/mysql-server
sudo docker tag mysql/mysql-server brianjrmo/bootcamp:mysql
sudo docker push brianjrmo/bootcamp:mysql
#
sudo docker logs bootcamp_mysql
sudo docker exec -it bootcamp_mysql mysql -uroot -p
sudo docker exec -it bootcamp_mysql bash
sudo docker stop/start/restart/rm bootcamp_mysql
#-----------------------------------------------------------
# build RestAPI image from dockerfile
#-----------------------------------------------------------
sudo docker build -t brianjrmo/bootcamp:restapi -f Dockerfile_RestAPI.txt .
sudo docker login brianjrmo
sudo docker push brianjrmo/bootcamp:restapi
# run container
sudo docker run -it brianjrmo/bootcamp:restapi
# login to container
sudo docker exec -it bootcamp_restapi bash

#-----------------------------------------------------------
# build Airflow image from dockerfile
#-----------------------------------------------------------
#https://towardsdatascience.com/master-apache-airflow-how-to-install-and-setup-the-environment-in-10-minutes-61dad52d5239
sudo docker build -t brianjrmo/bootcamp:airflow -f Dockerfile_Airflow.txt .
sudo docker exec -it brianjrmo/bootcamp:airflow bash
#update logs & dags in /home/bootcamp/airflow/airflow.cfg

#-----------------------------------------------------------
# run docker-compose
#-----------------------------------------------------------
sudo docker stop bootcamp_restapi bootcamp_mysql bootcamp_airflow_webserver bootcamp_airflow_scheduler
sudo docker rm bootcamp_restapi bootcamp_mysql bootcamp_airflow_webserver bootcamp_airflow_scheduler
sudo docker-compose up -d

#-----------------------------------------------------------
# clean up
#-----------------------------------------------------------
sudo docker rm `sudo docker ps -l | grep 'ago' | cut -c 1-12`; sudo docker ps -l